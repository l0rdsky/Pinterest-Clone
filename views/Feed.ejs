<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Feed Page</title>
  <!-- External CSS -->
  <link rel="stylesheet" href="/stylesheets/feed.css">

</head>
<body>
  <!-- Your content here -->
  

  <!-- A Simple non functional Pinterest inspired page layout created using only HTML and CSS.
         Created by M. Hassler - Hassified -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  
  <script src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js"></script>
  
  <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
  
  <body>
  
    <div class="header">
      <img src="https://uxwing.com/wp-content/themes/uxwing/download/brands-and-social-media/pinterest-round-color-icon.png" class="icon pinterest-icon">
      <ul class="navigation">
        <li>Home</li>
        <li>Explore</li>
        <li>Create</li>
      </ul>
      <div class="search-bar">
        <img src="https://www.brilliantlightingcenter.com/data/images/icons/search.svg" class="search-icon">
        <input type="text" placeholder="Search">
      </div>
      <div class="nav-icons">
        <img src="https://uxwing.com/wp-content/themes/uxwing/download/communication-chat-call/bell-icon.png" class="icon nav-icon">
        <img src="https://uxwing.com/wp-content/themes/uxwing/download/communication-chat-call/speech-bubble-black-icon.png" class="icon nav-icon">
        <img src="https://uxwing.com/wp-content/themes/uxwing/download/arrow-direction/angle-bottom-icon.png" class="icon nav-icon arrow-icon">
      </div>
    </div>
    
    <!-- Display area for images in the feed -->
  <div id="imageFeed">
    <!-- Images will be dynamically added here -->
  </div>

  <script>
    // Fetch all uploaded images via an API endpoint
    fetch('/users/api/feed') // Assuming a route to fetch all uploaded images
      .then(response => response.json())
      .then(imageFiles => {
        const imageFeed = document.getElementById('imageFeed');

        // Iterate through each image file and create HTML elements to display them
        imageFiles.forEach(file => {
          const imageUrl = `../images/uploads/${file}`;
          const imageElement = document.createElement('img');
          imageElement.src = imageUrl;
          imageElement.alt = file; // You might want to use a better alt description
          imageElement.width = 300; // Adjust the width as needed
          imageFeed.appendChild(imageElement);
        });
      })
      .catch(error => console.error('Error fetching images:', error));
  </script>
  
    <script>
      $(".grid").imagesLoaded(function() {
        $(".grid").masonry({
          itemSelector: ".grid-item"
        });
      });
    </script>
 
  
</body>
</html>
